-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from parsergrammar.y
-----------------------------------------------------------------------------


rule 7 is unused

terminal '\n' is unused
terminal in is unused
terminal '{' is unused
terminal '}' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> Sequence                       (0)
	Sequence -> begin Exp end                          (1)
	Sequence -> map Lam Exp                            (2)
	Sequence -> if Exp then Exp else Exp fi            (3)
	Sequence -> while Exp Exp                          (4)
	Sequence -> let var '=' Exp                        (5)
	Sequence -> zipLines Lam Exp Exp                   (6)
	Sequence -> Sequence                               (7)
	Sequence -> listsArith Lam Exp                     (8)
	Exp -> length Exp                                  (9)
	Exp -> Exp ';' Exp                                 (10)
	Exp -> print Exp                                   (11)
	Exp -> reverse Exp                                 (12)
	Exp -> push int int Exp                            (13)
	Exp -> head Exp                                    (14)
	Exp -> last Exp                                    (15)
	Exp -> take Exp Exp                                (16)
	Exp -> sumLists Exp                                (17)
	Exp -> takeRepeat Exp Exp                          (18)
	Exp -> fibSequence Exp                             (19)
	Exp -> splitAt Exp Exp                             (20)
	Exp -> getStream                                   (21)
	Exp -> duplicate Exp                               (22)
	Exp -> sum Exp                                     (23)
	Exp -> Exp '++' Exp                                (24)
	Exp -> Exp '+' Exp                                 (25)
	Exp -> Exp '-' Exp                                 (26)
	Exp -> Exp '*' Exp                                 (27)
	Exp -> Exp '/' Exp                                 (28)
	Exp -> Exp '<' Exp                                 (29)
	Exp -> Exp '>' Exp                                 (30)
	Exp -> int ',' Exp                                 (31)
	Exp -> int                                         (32)
	Exp -> var                                         (33)
	Exp -> true                                        (34)
	Exp -> false                                       (35)
	Exp -> '(' Exp ')'                                 (36)
	Lam -> Exp Exp                                     (37)
	Lam -> lam '(' var ':' DataType ')' Exp            (38)
	DataType -> Bool                                   (39)
	DataType -> Int                                    (40)
	DataType -> DataType arr DataType                  (41)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	Bool           { TokenTypeBool _ }
	Int            { TokenTypeInt _ }
	int            { TokenInt _ $$ }
	true           { TokenTrue _ }
	false          { TokenFalse _ }
	begin          { TokenBegin _ }
	end            { TokenEnd _ }
	getStream      { TokenGetStream _ }
	print          { TokenPrint _ }
	'\n'           { TokenEOL _ }
	let            { TokenLet _ }
	in             { TokenIn _ }
	'<'            { TokenLT _ }
	'>'            { TokenGT _ }
	'='            { TokenEq _ }
	':'            { TokenCol _ }
	'('            { TokenLParen _ }
	')'            { TokenRParen _ }
	'{'            { TokenLBrckt _ }
	'}'            { TokenRBrckt _ }
	','            { TokenComma _ }
	var            { TokenVar _ $$ }
	';'            { TokenSemiCol _ }
	if             { TokenIf _ }
	else           { TokenElse _ }
	then           { TokenThen _ }
	fi             { TokenFi _ }
	reverse        { TokenReverse _ }
	'+'            { TokenAdd _ }
	'*'            { TokenMult _ }
	'-'            { TokenSub _ }
	'/'            { TokenDiv _ }
	length         { TokenLength _ }
	lam            { TokenLambda _ }
	arr            { TokenArr _ }
	push           { TokenPush _ }
	'++'           { TokenMerge _ }
	splitAt        { TokenSplitAt _ }
	duplicate      { TokenDuplicate _ }
	head           { TokenHead _ }
	last           { TokenLast _ }
	take           { TokenTake _ }
	sum            { TokenSum _ }
	map            { TokenMap _ }
	takeRepeat     { TokenTakeRepeat _ }
	listsArith     { TokenListsArith _ }
	sumLists       { TokenSumLists _ }
	fibSequence    { TokenFibSequence _ }
	zipLines       { TokenZipLines _ }
	while          { TokenWhile _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	Sequence        rules 1, 2, 3, 4, 5, 6, 7, 8
	Exp             rules 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
	Lam             rules 37, 38
	DataType        rules 39, 40, 41

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	begin          shift, and enter state 2
	let            shift, and enter state 4
	if             shift, and enter state 5
	map            shift, and enter state 6
	listsArith     shift, and enter state 7
	zipLines       shift, and enter state 8
	while          shift, and enter state 9

	Sequence       goto state 3

State 1


	begin          shift, and enter state 2


State 2

	Sequence -> begin . Exp end                         (rule 1)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 37

State 3

	%start_parseCalc -> Sequence .                      (rule 0)
	Sequence -> Sequence .                              (rule 7)

	%eof           accept


State 4

	Sequence -> let . var '=' Exp                       (rule 5)

	var            shift, and enter state 36


State 5

	Sequence -> if . Exp then Exp else Exp fi           (rule 3)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 35

State 6

	Sequence -> map . Lam Exp                           (rule 2)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	lam            shift, and enter state 32
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 30
	Lam            goto state 34

State 7

	Sequence -> listsArith . Lam Exp                    (rule 8)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	lam            shift, and enter state 32
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 30
	Lam            goto state 33

State 8

	Sequence -> zipLines . Lam Exp Exp                  (rule 6)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	lam            shift, and enter state 32
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 30
	Lam            goto state 31

State 9

	Sequence -> while . Exp Exp                         (rule 4)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 10

State 10

	Sequence -> while Exp . Exp                         (rule 4)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 69

State 11

	Exp -> int . ',' Exp                                (rule 31)
	Exp -> int .                                        (rule 32)

	int            reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	end            reduce using rule 32
	getStream      reduce using rule 32
	print          reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	','            shift, and enter state 68
	var            reduce using rule 32
	';'            reduce using rule 32
	else           reduce using rule 32
	then           reduce using rule 32
	fi             reduce using rule 32
	reverse        reduce using rule 32
	'+'            reduce using rule 32
	'*'            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	length         reduce using rule 32
	push           reduce using rule 32
	'++'           reduce using rule 32
	splitAt        reduce using rule 32
	duplicate      reduce using rule 32
	head           reduce using rule 32
	last           reduce using rule 32
	take           reduce using rule 32
	sum            reduce using rule 32
	takeRepeat     reduce using rule 32
	sumLists       reduce using rule 32
	fibSequence    reduce using rule 32
	%eof           reduce using rule 32


State 12

	Exp -> true .                                       (rule 34)

	int            reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	end            reduce using rule 34
	getStream      reduce using rule 34
	print          reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	var            reduce using rule 34
	';'            reduce using rule 34
	else           reduce using rule 34
	then           reduce using rule 34
	fi             reduce using rule 34
	reverse        reduce using rule 34
	'+'            reduce using rule 34
	'*'            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	length         reduce using rule 34
	push           reduce using rule 34
	'++'           reduce using rule 34
	splitAt        reduce using rule 34
	duplicate      reduce using rule 34
	head           reduce using rule 34
	last           reduce using rule 34
	take           reduce using rule 34
	sum            reduce using rule 34
	takeRepeat     reduce using rule 34
	sumLists       reduce using rule 34
	fibSequence    reduce using rule 34
	%eof           reduce using rule 34


State 13

	Exp -> false .                                      (rule 35)

	int            reduce using rule 35
	true           reduce using rule 35
	false          reduce using rule 35
	end            reduce using rule 35
	getStream      reduce using rule 35
	print          reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	var            reduce using rule 35
	';'            reduce using rule 35
	else           reduce using rule 35
	then           reduce using rule 35
	fi             reduce using rule 35
	reverse        reduce using rule 35
	'+'            reduce using rule 35
	'*'            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	length         reduce using rule 35
	push           reduce using rule 35
	'++'           reduce using rule 35
	splitAt        reduce using rule 35
	duplicate      reduce using rule 35
	head           reduce using rule 35
	last           reduce using rule 35
	take           reduce using rule 35
	sum            reduce using rule 35
	takeRepeat     reduce using rule 35
	sumLists       reduce using rule 35
	fibSequence    reduce using rule 35
	%eof           reduce using rule 35


State 14

	Exp -> getStream .                                  (rule 21)

	int            reduce using rule 21
	true           reduce using rule 21
	false          reduce using rule 21
	end            reduce using rule 21
	getStream      reduce using rule 21
	print          reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	var            reduce using rule 21
	';'            reduce using rule 21
	else           reduce using rule 21
	then           reduce using rule 21
	fi             reduce using rule 21
	reverse        reduce using rule 21
	'+'            reduce using rule 21
	'*'            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	length         reduce using rule 21
	push           reduce using rule 21
	'++'           reduce using rule 21
	splitAt        reduce using rule 21
	duplicate      reduce using rule 21
	head           reduce using rule 21
	last           reduce using rule 21
	take           reduce using rule 21
	sum            reduce using rule 21
	takeRepeat     reduce using rule 21
	sumLists       reduce using rule 21
	fibSequence    reduce using rule 21
	%eof           reduce using rule 21


State 15

	Exp -> print . Exp                                  (rule 11)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 67

State 16

	Exp -> '(' . Exp ')'                                (rule 36)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 66

State 17

	Exp -> var .                                        (rule 33)

	int            reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	end            reduce using rule 33
	getStream      reduce using rule 33
	print          reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	var            reduce using rule 33
	';'            reduce using rule 33
	else           reduce using rule 33
	then           reduce using rule 33
	fi             reduce using rule 33
	reverse        reduce using rule 33
	'+'            reduce using rule 33
	'*'            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	length         reduce using rule 33
	push           reduce using rule 33
	'++'           reduce using rule 33
	splitAt        reduce using rule 33
	duplicate      reduce using rule 33
	head           reduce using rule 33
	last           reduce using rule 33
	take           reduce using rule 33
	sum            reduce using rule 33
	takeRepeat     reduce using rule 33
	sumLists       reduce using rule 33
	fibSequence    reduce using rule 33
	%eof           reduce using rule 33


State 18

	Exp -> reverse . Exp                                (rule 12)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 65

State 19

	Exp -> length . Exp                                 (rule 9)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 64

State 20

	Exp -> push . int int Exp                           (rule 13)

	int            shift, and enter state 63


State 21

	Exp -> splitAt . Exp Exp                            (rule 20)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 62

State 22

	Exp -> duplicate . Exp                              (rule 22)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 61

State 23

	Exp -> head . Exp                                   (rule 14)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 60

State 24

	Exp -> last . Exp                                   (rule 15)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 59

State 25

	Exp -> take . Exp Exp                               (rule 16)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 58

State 26

	Exp -> sum . Exp                                    (rule 23)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 57

State 27

	Exp -> takeRepeat . Exp Exp                         (rule 18)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 56

State 28

	Exp -> sumLists . Exp                               (rule 17)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 55

State 29

	Exp -> fibSequence . Exp                            (rule 19)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 54

State 30

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Lam -> Exp . Exp                                    (rule 37)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 53

State 31

	Sequence -> zipLines Lam . Exp Exp                  (rule 6)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 52

State 32

	Lam -> lam . '(' var ':' DataType ')' Exp           (rule 38)

	'('            shift, and enter state 51


State 33

	Sequence -> listsArith Lam . Exp                    (rule 8)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 50

State 34

	Sequence -> map Lam . Exp                           (rule 2)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 49

State 35

	Sequence -> if Exp . then Exp else Exp fi           (rule 3)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	then           shift, and enter state 48
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46


State 36

	Sequence -> let var . '=' Exp                       (rule 5)

	'='            shift, and enter state 47


State 37

	Sequence -> begin Exp . end                         (rule 1)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	end            shift, and enter state 38
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46


State 38

	Sequence -> begin Exp end .                         (rule 1)

	%eof           reduce using rule 1


State 39

	Exp -> Exp '<' . Exp                                (rule 29)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 87

State 40

	Exp -> Exp '>' . Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 86

State 41

	Exp -> Exp ';' . Exp                                (rule 10)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 85

State 42

	Exp -> Exp '+' . Exp                                (rule 25)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 84

State 43

	Exp -> Exp '*' . Exp                                (rule 27)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 83

State 44

	Exp -> Exp '-' . Exp                                (rule 26)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 82

State 45

	Exp -> Exp '/' . Exp                                (rule 28)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 81

State 46

	Exp -> Exp '++' . Exp                               (rule 24)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 80

State 47

	Sequence -> let var '=' . Exp                       (rule 5)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 79

State 48

	Sequence -> if Exp then . Exp else Exp fi           (rule 3)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 78

State 49

	Sequence -> map Lam Exp .                           (rule 2)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46
	%eof           reduce using rule 2


State 50

	Sequence -> listsArith Lam Exp .                    (rule 8)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46
	%eof           reduce using rule 8


State 51

	Lam -> lam '(' . var ':' DataType ')' Exp           (rule 38)

	var            shift, and enter state 77


State 52

	Sequence -> zipLines Lam Exp . Exp                  (rule 6)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 76

State 53

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Lam -> Exp Exp .                                    (rule 37)

	int            reduce using rule 37
	true           reduce using rule 37
	false          reduce using rule 37
	getStream      reduce using rule 37
	print          reduce using rule 37
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 37
	var            reduce using rule 37
	';'            shift, and enter state 41
	reverse        reduce using rule 37
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 37
	push           reduce using rule 37
	'++'           shift, and enter state 46
	splitAt        reduce using rule 37
	duplicate      reduce using rule 37
	head           reduce using rule 37
	last           reduce using rule 37
	take           reduce using rule 37
	sum            reduce using rule 37
	takeRepeat     reduce using rule 37
	sumLists       reduce using rule 37
	fibSequence    reduce using rule 37


State 54

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> fibSequence Exp .                            (rule 19)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	end            reduce using rule 19
	getStream      reduce using rule 19
	print          reduce using rule 19
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 19
	')'            reduce using rule 19
	var            reduce using rule 19
	';'            shift, and enter state 41
	else           reduce using rule 19
	then           reduce using rule 19
	fi             reduce using rule 19
	reverse        reduce using rule 19
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 19
	push           reduce using rule 19
	'++'           shift, and enter state 46
	splitAt        reduce using rule 19
	duplicate      reduce using rule 19
	head           reduce using rule 19
	last           reduce using rule 19
	take           reduce using rule 19
	sum            reduce using rule 19
	takeRepeat     reduce using rule 19
	sumLists       reduce using rule 19
	fibSequence    reduce using rule 19
	%eof           reduce using rule 19


State 55

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> sumLists Exp .                               (rule 17)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	end            reduce using rule 17
	getStream      reduce using rule 17
	print          reduce using rule 17
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 17
	')'            reduce using rule 17
	var            reduce using rule 17
	';'            shift, and enter state 41
	else           reduce using rule 17
	then           reduce using rule 17
	fi             reduce using rule 17
	reverse        reduce using rule 17
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 17
	push           reduce using rule 17
	'++'           shift, and enter state 46
	splitAt        reduce using rule 17
	duplicate      reduce using rule 17
	head           reduce using rule 17
	last           reduce using rule 17
	take           reduce using rule 17
	sum            reduce using rule 17
	takeRepeat     reduce using rule 17
	sumLists       reduce using rule 17
	fibSequence    reduce using rule 17
	%eof           reduce using rule 17


State 56

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> takeRepeat Exp . Exp                         (rule 18)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 75

State 57

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> sum Exp .                                    (rule 23)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	end            reduce using rule 23
	getStream      reduce using rule 23
	print          reduce using rule 23
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 23
	')'            reduce using rule 23
	var            reduce using rule 23
	';'            shift, and enter state 41
	else           reduce using rule 23
	then           reduce using rule 23
	fi             reduce using rule 23
	reverse        reduce using rule 23
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 23
	push           reduce using rule 23
	'++'           shift, and enter state 46
	splitAt        reduce using rule 23
	duplicate      reduce using rule 23
	head           reduce using rule 23
	last           reduce using rule 23
	take           reduce using rule 23
	sum            reduce using rule 23
	takeRepeat     reduce using rule 23
	sumLists       reduce using rule 23
	fibSequence    reduce using rule 23
	%eof           reduce using rule 23


State 58

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> take Exp . Exp                               (rule 16)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 74

State 59

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> last Exp .                                   (rule 15)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	end            reduce using rule 15
	getStream      reduce using rule 15
	print          reduce using rule 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 15
	')'            reduce using rule 15
	var            reduce using rule 15
	';'            shift, and enter state 41
	else           reduce using rule 15
	then           reduce using rule 15
	fi             reduce using rule 15
	reverse        reduce using rule 15
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 15
	push           reduce using rule 15
	'++'           shift, and enter state 46
	splitAt        reduce using rule 15
	duplicate      reduce using rule 15
	head           reduce using rule 15
	last           reduce using rule 15
	take           reduce using rule 15
	sum            reduce using rule 15
	takeRepeat     reduce using rule 15
	sumLists       reduce using rule 15
	fibSequence    reduce using rule 15
	%eof           reduce using rule 15


State 60

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> head Exp .                                   (rule 14)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	end            reduce using rule 14
	getStream      reduce using rule 14
	print          reduce using rule 14
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 14
	')'            reduce using rule 14
	var            reduce using rule 14
	';'            shift, and enter state 41
	else           reduce using rule 14
	then           reduce using rule 14
	fi             reduce using rule 14
	reverse        reduce using rule 14
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 14
	push           reduce using rule 14
	'++'           shift, and enter state 46
	splitAt        reduce using rule 14
	duplicate      reduce using rule 14
	head           reduce using rule 14
	last           reduce using rule 14
	take           reduce using rule 14
	sum            reduce using rule 14
	takeRepeat     reduce using rule 14
	sumLists       reduce using rule 14
	fibSequence    reduce using rule 14
	%eof           reduce using rule 14


State 61

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> duplicate Exp .                              (rule 22)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 22
	true           reduce using rule 22
	false          reduce using rule 22
	end            reduce using rule 22
	getStream      reduce using rule 22
	print          reduce using rule 22
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 22
	')'            reduce using rule 22
	var            reduce using rule 22
	';'            shift, and enter state 41
	else           reduce using rule 22
	then           reduce using rule 22
	fi             reduce using rule 22
	reverse        reduce using rule 22
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 22
	push           reduce using rule 22
	'++'           shift, and enter state 46
	splitAt        reduce using rule 22
	duplicate      reduce using rule 22
	head           reduce using rule 22
	last           reduce using rule 22
	take           reduce using rule 22
	sum            reduce using rule 22
	takeRepeat     reduce using rule 22
	sumLists       reduce using rule 22
	fibSequence    reduce using rule 22
	%eof           reduce using rule 22


State 62

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> splitAt Exp . Exp                            (rule 20)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            shift, and enter state 16
	var            shift, and enter state 17
	';'            shift, and enter state 41
	reverse        shift, and enter state 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         shift, and enter state 19
	push           shift, and enter state 20
	'++'           shift, and enter state 46
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 73

State 63

	Exp -> push int . int Exp                           (rule 13)

	int            shift, and enter state 72


State 64

	Exp -> length Exp .                                 (rule 9)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	end            reduce using rule 9
	getStream      reduce using rule 9
	print          reduce using rule 9
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 9
	')'            reduce using rule 9
	var            reduce using rule 9
	';'            shift, and enter state 41
	else           reduce using rule 9
	then           reduce using rule 9
	fi             reduce using rule 9
	reverse        reduce using rule 9
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 9
	push           reduce using rule 9
	'++'           shift, and enter state 46
	splitAt        reduce using rule 9
	duplicate      reduce using rule 9
	head           reduce using rule 9
	last           reduce using rule 9
	take           reduce using rule 9
	sum            reduce using rule 9
	takeRepeat     reduce using rule 9
	sumLists       reduce using rule 9
	fibSequence    reduce using rule 9
	%eof           reduce using rule 9


State 65

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> reverse Exp .                                (rule 12)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	end            reduce using rule 12
	getStream      reduce using rule 12
	print          reduce using rule 12
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 12
	')'            reduce using rule 12
	var            reduce using rule 12
	';'            shift, and enter state 41
	else           reduce using rule 12
	then           reduce using rule 12
	fi             reduce using rule 12
	reverse        reduce using rule 12
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 12
	push           reduce using rule 12
	'++'           shift, and enter state 46
	splitAt        reduce using rule 12
	duplicate      reduce using rule 12
	head           reduce using rule 12
	last           reduce using rule 12
	take           reduce using rule 12
	sum            reduce using rule 12
	takeRepeat     reduce using rule 12
	sumLists       reduce using rule 12
	fibSequence    reduce using rule 12
	%eof           reduce using rule 12


State 66

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Exp -> '(' Exp . ')'                                (rule 36)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	')'            shift, and enter state 71
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46


State 67

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> print Exp .                                  (rule 11)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	end            reduce using rule 11
	getStream      reduce using rule 11
	print          reduce using rule 11
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 11
	')'            reduce using rule 11
	var            reduce using rule 11
	';'            shift, and enter state 41
	else           reduce using rule 11
	then           reduce using rule 11
	fi             reduce using rule 11
	reverse        reduce using rule 11
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 11
	push           reduce using rule 11
	'++'           shift, and enter state 46
	splitAt        reduce using rule 11
	duplicate      reduce using rule 11
	head           reduce using rule 11
	last           reduce using rule 11
	take           reduce using rule 11
	sum            reduce using rule 11
	takeRepeat     reduce using rule 11
	sumLists       reduce using rule 11
	fibSequence    reduce using rule 11
	%eof           reduce using rule 11


State 68

	Exp -> int ',' . Exp                                (rule 31)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 70

State 69

	Sequence -> while Exp Exp .                         (rule 4)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46
	%eof           reduce using rule 4


State 70

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Exp -> int ',' Exp .                                (rule 31)

	int            reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	end            reduce using rule 31
	getStream      reduce using rule 31
	print          reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	var            reduce using rule 31
	';'            reduce using rule 31
	else           reduce using rule 31
	then           reduce using rule 31
	fi             reduce using rule 31
	reverse        reduce using rule 31
	'+'            reduce using rule 31
	'*'            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	length         reduce using rule 31
	push           reduce using rule 31
	'++'           reduce using rule 31
	splitAt        reduce using rule 31
	duplicate      reduce using rule 31
	head           reduce using rule 31
	last           reduce using rule 31
	take           reduce using rule 31
	sum            reduce using rule 31
	takeRepeat     reduce using rule 31
	sumLists       reduce using rule 31
	fibSequence    reduce using rule 31
	%eof           reduce using rule 31


State 71

	Exp -> '(' Exp ')' .                                (rule 36)

	int            reduce using rule 36
	true           reduce using rule 36
	false          reduce using rule 36
	end            reduce using rule 36
	getStream      reduce using rule 36
	print          reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	var            reduce using rule 36
	';'            reduce using rule 36
	else           reduce using rule 36
	then           reduce using rule 36
	fi             reduce using rule 36
	reverse        reduce using rule 36
	'+'            reduce using rule 36
	'*'            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	length         reduce using rule 36
	push           reduce using rule 36
	'++'           reduce using rule 36
	splitAt        reduce using rule 36
	duplicate      reduce using rule 36
	head           reduce using rule 36
	last           reduce using rule 36
	take           reduce using rule 36
	sum            reduce using rule 36
	takeRepeat     reduce using rule 36
	sumLists       reduce using rule 36
	fibSequence    reduce using rule 36
	%eof           reduce using rule 36


State 72

	Exp -> push int int . Exp                           (rule 13)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 90

State 73

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> splitAt Exp Exp .                            (rule 20)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 20
	true           reduce using rule 20
	false          reduce using rule 20
	end            reduce using rule 20
	getStream      reduce using rule 20
	print          reduce using rule 20
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 20
	')'            reduce using rule 20
	var            reduce using rule 20
	';'            shift, and enter state 41
	else           reduce using rule 20
	then           reduce using rule 20
	fi             reduce using rule 20
	reverse        reduce using rule 20
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 20
	push           reduce using rule 20
	'++'           shift, and enter state 46
	splitAt        reduce using rule 20
	duplicate      reduce using rule 20
	head           reduce using rule 20
	last           reduce using rule 20
	take           reduce using rule 20
	sum            reduce using rule 20
	takeRepeat     reduce using rule 20
	sumLists       reduce using rule 20
	fibSequence    reduce using rule 20
	%eof           reduce using rule 20


State 74

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> take Exp Exp .                               (rule 16)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 16
	true           reduce using rule 16
	false          reduce using rule 16
	end            reduce using rule 16
	getStream      reduce using rule 16
	print          reduce using rule 16
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 16
	')'            reduce using rule 16
	var            reduce using rule 16
	';'            shift, and enter state 41
	else           reduce using rule 16
	then           reduce using rule 16
	fi             reduce using rule 16
	reverse        reduce using rule 16
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 16
	push           reduce using rule 16
	'++'           shift, and enter state 46
	splitAt        reduce using rule 16
	duplicate      reduce using rule 16
	head           reduce using rule 16
	last           reduce using rule 16
	take           reduce using rule 16
	sum            reduce using rule 16
	takeRepeat     reduce using rule 16
	sumLists       reduce using rule 16
	fibSequence    reduce using rule 16
	%eof           reduce using rule 16


State 75

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> takeRepeat Exp Exp .                         (rule 18)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	end            reduce using rule 18
	getStream      reduce using rule 18
	print          reduce using rule 18
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 18
	')'            reduce using rule 18
	var            reduce using rule 18
	';'            shift, and enter state 41
	else           reduce using rule 18
	then           reduce using rule 18
	fi             reduce using rule 18
	reverse        reduce using rule 18
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 18
	push           reduce using rule 18
	'++'           shift, and enter state 46
	splitAt        reduce using rule 18
	duplicate      reduce using rule 18
	head           reduce using rule 18
	last           reduce using rule 18
	take           reduce using rule 18
	sum            reduce using rule 18
	takeRepeat     reduce using rule 18
	sumLists       reduce using rule 18
	fibSequence    reduce using rule 18
	%eof           reduce using rule 18


State 76

	Sequence -> zipLines Lam Exp Exp .                  (rule 6)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46
	%eof           reduce using rule 6


State 77

	Lam -> lam '(' var . ':' DataType ')' Exp           (rule 38)

	':'            shift, and enter state 89


State 78

	Sequence -> if Exp then Exp . else Exp fi           (rule 3)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	else           shift, and enter state 88
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46


State 79

	Sequence -> let var '=' Exp .                       (rule 5)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46
	%eof           reduce using rule 5


State 80

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp '++' Exp .                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	end            reduce using rule 24
	getStream      reduce using rule 24
	print          reduce using rule 24
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 24
	')'            reduce using rule 24
	var            reduce using rule 24
	';'            shift, and enter state 41
	else           reduce using rule 24
	then           reduce using rule 24
	fi             reduce using rule 24
	reverse        reduce using rule 24
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 24
	push           reduce using rule 24
	'++'           reduce using rule 24
	splitAt        reduce using rule 24
	duplicate      reduce using rule 24
	head           reduce using rule 24
	last           reduce using rule 24
	take           reduce using rule 24
	sum            reduce using rule 24
	takeRepeat     reduce using rule 24
	sumLists       reduce using rule 24
	fibSequence    reduce using rule 24
	%eof           reduce using rule 24


State 81

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp '/' Exp .                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	end            reduce using rule 28
	getStream      reduce using rule 28
	print          reduce using rule 28
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 28
	')'            reduce using rule 28
	var            reduce using rule 28
	';'            shift, and enter state 41
	else           reduce using rule 28
	then           reduce using rule 28
	fi             reduce using rule 28
	reverse        reduce using rule 28
	'+'            reduce using rule 28
	'*'            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	length         reduce using rule 28
	push           reduce using rule 28
	'++'           reduce using rule 28
	splitAt        reduce using rule 28
	duplicate      reduce using rule 28
	head           reduce using rule 28
	last           reduce using rule 28
	take           reduce using rule 28
	sum            reduce using rule 28
	takeRepeat     reduce using rule 28
	sumLists       reduce using rule 28
	fibSequence    reduce using rule 28
	%eof           reduce using rule 28


State 82

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp '-' Exp .                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	end            reduce using rule 26
	getStream      reduce using rule 26
	print          reduce using rule 26
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 26
	')'            reduce using rule 26
	var            reduce using rule 26
	';'            shift, and enter state 41
	else           reduce using rule 26
	then           reduce using rule 26
	fi             reduce using rule 26
	reverse        reduce using rule 26
	'+'            reduce using rule 26
	'*'            shift, and enter state 43
	'-'            reduce using rule 26
	'/'            shift, and enter state 45
	length         reduce using rule 26
	push           reduce using rule 26
	'++'           reduce using rule 26
	splitAt        reduce using rule 26
	duplicate      reduce using rule 26
	head           reduce using rule 26
	last           reduce using rule 26
	take           reduce using rule 26
	sum            reduce using rule 26
	takeRepeat     reduce using rule 26
	sumLists       reduce using rule 26
	fibSequence    reduce using rule 26
	%eof           reduce using rule 26


State 83

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp '*' Exp .                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	end            reduce using rule 27
	getStream      reduce using rule 27
	print          reduce using rule 27
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 27
	')'            reduce using rule 27
	var            reduce using rule 27
	';'            shift, and enter state 41
	else           reduce using rule 27
	then           reduce using rule 27
	fi             reduce using rule 27
	reverse        reduce using rule 27
	'+'            reduce using rule 27
	'*'            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	length         reduce using rule 27
	push           reduce using rule 27
	'++'           reduce using rule 27
	splitAt        reduce using rule 27
	duplicate      reduce using rule 27
	head           reduce using rule 27
	last           reduce using rule 27
	take           reduce using rule 27
	sum            reduce using rule 27
	takeRepeat     reduce using rule 27
	sumLists       reduce using rule 27
	fibSequence    reduce using rule 27
	%eof           reduce using rule 27


State 84

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp '+' Exp .                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	end            reduce using rule 25
	getStream      reduce using rule 25
	print          reduce using rule 25
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 25
	')'            reduce using rule 25
	var            reduce using rule 25
	';'            shift, and enter state 41
	else           reduce using rule 25
	then           reduce using rule 25
	fi             reduce using rule 25
	reverse        reduce using rule 25
	'+'            reduce using rule 25
	'*'            shift, and enter state 43
	'-'            reduce using rule 25
	'/'            shift, and enter state 45
	length         reduce using rule 25
	push           reduce using rule 25
	'++'           reduce using rule 25
	splitAt        reduce using rule 25
	duplicate      reduce using rule 25
	head           reduce using rule 25
	last           reduce using rule 25
	take           reduce using rule 25
	sum            reduce using rule 25
	takeRepeat     reduce using rule 25
	sumLists       reduce using rule 25
	fibSequence    reduce using rule 25
	%eof           reduce using rule 25


State 85

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp ';' Exp .                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	end            reduce using rule 10
	getStream      reduce using rule 10
	print          reduce using rule 10
	'<'            reduce using rule 10
	'>'            reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	var            reduce using rule 10
	';'            shift, and enter state 41
	else           reduce using rule 10
	then           reduce using rule 10
	fi             reduce using rule 10
	reverse        reduce using rule 10
	'+'            reduce using rule 10
	'*'            reduce using rule 10
	'-'            reduce using rule 10
	'/'            reduce using rule 10
	length         reduce using rule 10
	push           reduce using rule 10
	'++'           reduce using rule 10
	splitAt        reduce using rule 10
	duplicate      reduce using rule 10
	head           reduce using rule 10
	last           reduce using rule 10
	take           reduce using rule 10
	sum            reduce using rule 10
	takeRepeat     reduce using rule 10
	sumLists       reduce using rule 10
	fibSequence    reduce using rule 10
	%eof           reduce using rule 10


State 86

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Exp -> Exp '>' Exp .                                (rule 30)

	int            reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	end            reduce using rule 30
	getStream      reduce using rule 30
	print          reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	var            reduce using rule 30
	';'            shift, and enter state 41
	else           reduce using rule 30
	then           reduce using rule 30
	fi             reduce using rule 30
	reverse        reduce using rule 30
	'+'            reduce using rule 30
	'*'            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	length         reduce using rule 30
	push           reduce using rule 30
	'++'           reduce using rule 30
	splitAt        reduce using rule 30
	duplicate      reduce using rule 30
	head           reduce using rule 30
	last           reduce using rule 30
	take           reduce using rule 30
	sum            reduce using rule 30
	takeRepeat     reduce using rule 30
	sumLists       reduce using rule 30
	fibSequence    reduce using rule 30
	%eof           reduce using rule 30


State 87

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp '<' Exp .                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	end            reduce using rule 29
	getStream      reduce using rule 29
	print          reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	var            reduce using rule 29
	';'            shift, and enter state 41
	else           reduce using rule 29
	then           reduce using rule 29
	fi             reduce using rule 29
	reverse        reduce using rule 29
	'+'            reduce using rule 29
	'*'            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	length         reduce using rule 29
	push           reduce using rule 29
	'++'           reduce using rule 29
	splitAt        reduce using rule 29
	duplicate      reduce using rule 29
	head           reduce using rule 29
	last           reduce using rule 29
	take           reduce using rule 29
	sum            reduce using rule 29
	takeRepeat     reduce using rule 29
	sumLists       reduce using rule 29
	fibSequence    reduce using rule 29
	%eof           reduce using rule 29


State 88

	Sequence -> if Exp then Exp else . Exp fi           (rule 3)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 94

State 89

	Lam -> lam '(' var ':' . DataType ')' Exp           (rule 38)

	Bool           shift, and enter state 92
	Int            shift, and enter state 93

	DataType       goto state 91

State 90

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> push int int Exp .                           (rule 13)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	int            reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	end            reduce using rule 13
	getStream      reduce using rule 13
	print          reduce using rule 13
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 13
	')'            reduce using rule 13
	var            reduce using rule 13
	';'            shift, and enter state 41
	else           reduce using rule 13
	then           reduce using rule 13
	fi             reduce using rule 13
	reverse        reduce using rule 13
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 13
	push           reduce using rule 13
	'++'           shift, and enter state 46
	splitAt        reduce using rule 13
	duplicate      reduce using rule 13
	head           reduce using rule 13
	last           reduce using rule 13
	take           reduce using rule 13
	sum            reduce using rule 13
	takeRepeat     reduce using rule 13
	sumLists       reduce using rule 13
	fibSequence    reduce using rule 13
	%eof           reduce using rule 13


State 91

	Lam -> lam '(' var ':' DataType . ')' Exp           (rule 38)
	DataType -> DataType . arr DataType                 (rule 41)

	')'            shift, and enter state 96
	arr            shift, and enter state 97


State 92

	DataType -> Bool .                                  (rule 39)

	')'            reduce using rule 39
	arr            reduce using rule 39


State 93

	DataType -> Int .                                   (rule 40)

	')'            reduce using rule 40
	arr            reduce using rule 40


State 94

	Sequence -> if Exp then Exp else Exp . fi           (rule 3)
	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)

	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	';'            shift, and enter state 41
	fi             shift, and enter state 95
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	'++'           shift, and enter state 46


State 95

	Sequence -> if Exp then Exp else Exp fi .           (rule 3)

	%eof           reduce using rule 3


State 96

	Lam -> lam '(' var ':' DataType ')' . Exp           (rule 38)

	int            shift, and enter state 11
	true           shift, and enter state 12
	false          shift, and enter state 13
	getStream      shift, and enter state 14
	print          shift, and enter state 15
	'('            shift, and enter state 16
	var            shift, and enter state 17
	reverse        shift, and enter state 18
	length         shift, and enter state 19
	push           shift, and enter state 20
	splitAt        shift, and enter state 21
	duplicate      shift, and enter state 22
	head           shift, and enter state 23
	last           shift, and enter state 24
	take           shift, and enter state 25
	sum            shift, and enter state 26
	takeRepeat     shift, and enter state 27
	sumLists       shift, and enter state 28
	fibSequence    shift, and enter state 29

	Exp            goto state 99

State 97

	DataType -> DataType arr . DataType                 (rule 41)

	Bool           shift, and enter state 92
	Int            shift, and enter state 93

	DataType       goto state 98

State 98

	DataType -> DataType . arr DataType                 (rule 41)
	DataType -> DataType arr DataType .                 (rule 41)

	')'            reduce using rule 41
	arr            reduce using rule 41


State 99

	Exp -> Exp . ';' Exp                                (rule 10)
	Exp -> Exp . '++' Exp                               (rule 24)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '<' Exp                                (rule 29)
	Exp -> Exp . '>' Exp                                (rule 30)
	Lam -> lam '(' var ':' DataType ')' Exp .           (rule 38)

	int            reduce using rule 38
	true           reduce using rule 38
	false          reduce using rule 38
	getStream      reduce using rule 38
	print          reduce using rule 38
	'<'            shift, and enter state 39
	'>'            shift, and enter state 40
	'('            reduce using rule 38
	var            reduce using rule 38
	';'            shift, and enter state 41
	reverse        reduce using rule 38
	'+'            shift, and enter state 42
	'*'            shift, and enter state 43
	'-'            shift, and enter state 44
	'/'            shift, and enter state 45
	length         reduce using rule 38
	push           reduce using rule 38
	'++'           shift, and enter state 46
	splitAt        reduce using rule 38
	duplicate      reduce using rule 38
	head           reduce using rule 38
	last           reduce using rule 38
	take           reduce using rule 38
	sum            reduce using rule 38
	takeRepeat     reduce using rule 38
	sumLists       reduce using rule 38
	fibSequence    reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 42
Number of terminals: 50
Number of non-terminals: 5
Number of states: 100
